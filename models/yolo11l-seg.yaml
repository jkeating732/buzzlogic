# Ultralytics ðŸš€ AGPL-3.0 License â€“ https://ultralytics.com/license
#
# YOLOâ€‘11 **medium** (m) instanceâ€‘segmentation model **with P6 output head**
# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
#  â€¢ Original template: yolo11-seg.yaml (P3/8â€‘P5/32 only)
#  â€¢ This variant adds a **strideâ€‘64 (P6/64) branch**, doubling the receptive
#    field of the coarsest prediction head âžŸ better performance on objects that
#    span >Â½ of the input frame (e.g. large honey/brood patches).
#
#  Layer index references were recomputed so that Concat operations pair tensors
#  with matching spatial dimensions.  Final detect layer now takes indices
#  [18, 21, 24, 27] corresponding to P3/8, P4/16, P5/32 and new P6/64 heads.
# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

# â”€â”€â”€â”€â”€â”€â”€â”€â”€ Parameters â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
# Number of classes â€“ replace 80 with your real number (e.g. 4 for bees).
nc: 80

scales:  # [depth, width, max_channels]
  n: [0.50, 0.25, 1024]
  s: [0.50, 0.50, 1024]
  m: [0.50, 1.00, 512]
  l: [1.00, 1.00, 512]
  x: [1.00, 1.50, 512]

# ============================================================================
# BACKBONE  (0â€‘12)
# ----------------------------------------------------------------------------
backbone:
  - [-1, 1, Conv, [64, 3, 2]]        # 0  P1/2
  - [-1, 1, Conv, [128, 3, 2]]       # 1  P2/4
  - [-1, 2, C3k2, [256, False, 0.25]]# 2
  - [-1, 1, Conv, [256, 3, 2]]       # 3  P3/8
  - [-1, 2, C3k2, [512, False, 0.25]]# 4
  - [-1, 1, Conv, [512, 3, 2]]       # 5  P4/16
  - [-1, 2, C3k2, [512, True]]       # 6
  - [-1, 1, Conv, [1024, 3, 2]]      # 7  P5/32
  - [-1, 2, C3k2, [1024, True]]      # 8
  - [-1, 1, SPPF, [1024, 5]]         # 9
  - [-1, 2, C2PSA, [1024]]           # 10 (global context)
  - [-1, 1, Conv, [1024, 3, 2]]      # 11 P6/64  (NEW)
  - [-1, 2, C3k2, [1024, True]]      # 12 P6 feature  (NEW)

# ============================================================================
# HEAD (13â€‘28)
# ----------------------------------------------------------------------------
head:
  # ---- P5 âžŸ P4 path ----
  - [10, 1, nn.Upsample, [None, 2, "nearest"]]   # 13 upsample P5 (layer10) to P4 size
  - [[-1, 6], 1, Concat, [1]]                     # 14 cat with backbone P4 (layer6)
  - [-1, 2, C3k2, [512, False]]                   # 15 P4 head

  # ---- P4 âžŸ P3 path ----
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] # 16 up P4->P3
  - [[-1, 4], 1, Concat, [1]]                   # 17 cat with backbone P3 (layer4)
  - [-1, 2, C3k2, [256, False]]                 # 18 P3 head (small objects)

  # ---- down P3 âžŸ P4 ----
  - [-1, 1, Conv, [256, 3, 2]]                  # 19 down to P4 size
  - [[-1, 15], 1, Concat, [1]]                  # 20 cat with earlier P4 head (15)
  - [-1, 2, C3k2, [512, False]]                 # 21 refined P4 head (medium objs)

  # ---- down P4 âžŸ P5 ----
  - [-1, 1, Conv, [512, 3, 2]]                  # 22 down to P5 size
  - [[-1, 10], 1, Concat, [1]]                  # 23 cat with backbone P5 (layer10)
  - [-1, 2, C3k2, [1024, True]]                 # 24 P5 head (large objs)

  # ---- down P5 âžŸ P6 ----
  - [-1, 1, Conv, [1024, 3, 2]]                 # 25 down to P6 size (stride64)
  - [[-1, 12], 1, Concat, [1]]                  # 26 cat with backbone P6 (layer12)
  - [-1, 2, C3k2, [1024, True]]                 # 27 P6 head (XL objs)

  # ---- Detect (Segment) ----
  - [[18, 21, 24, 27], 1, Segment, [nc, 32, 256]] # 28 detect on P3/8 P4/16 P5/32 P6/64
